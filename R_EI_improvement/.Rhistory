d_train[idx_train,]$event_impact <- use_event[i]
}
}
View(d_test)
View(d_train)
View(all_df)
# d_train <- as.data.frame(d_train)
# d_test <- as.data.frame(d_test)
d_train$event_impact
update_train[[1]]
updated_ei <- append(d_train$event_impact, d_test$event_impact)
updated_ei <- data.frame(updated_ei)
View(updated_ei)
all_df$event_impact <- updated_ei[,]
View(all_df)
cross_train_first <- 1
cross_train_last <- 730
cross_test_first <- 731
cross_test_last <- cross_test_first + 30
loop_num <- ceiling((nrow(all_df) - cross_train_last) / 30)
split_train <- list()
split_test <- list()
cross_result <- list()
cross_rmse_list <- list()
for (i in 1:loop_num) {
d_train <- all_df[cross_train_first:cross_train_last,]
if (i == loop_num){
d_test <- all_df[cross_test_first:nrow(all_df),]
}else{
d_test <- all_df[cross_test_first:cross_test_last,]
}
date_list <- d_test$date
d_train <- d_train[,FV]
d_test <-d_test[,FV]
cross_pred <- cross_learn(d_train, d_test,"yes")
save_file_name <- paste0("/Users/e185716/グラフ練習2/クロス/ei_error_min/period_",i,".csv")
save_data <- data.frame(date_list, cross_pred$mean)
colnames(save_data) <- c("date", "prediction")
write.csv(x =save_data, file = save_file_name)
cross_result <- c(cross_result,list(cross_pred$mean))
cross_rmse <- calculate_rmse(d_test$CustNum, cross_pred$mean)
cross_r2 <- calculate_r_squared(d_test$CustNum, cross_pred$mean)
print(paste0("period_", i, ", RMSE : ", cross_rmse, " , R2 : ", cross_r2))
cross_rmse_list <- c(cross_rmse_list,(paste0("period_", i, ", RMSE : ", cross_rmse, " , R2 : ", cross_r2)))
#分割データの保存
split_train <- c(split_train, list(d_train))
split_test <- c(split_test, list(d_test))
cross_train_first <- cross_train_first + 30
cross_train_last <- cross_train_last + 30
cross_test_first <- cross_test_first + 30
cross_test_last <- cross_test_last + 30
}
for (i in cross_rmse_list){
print(i)
}
for (i in cross_rmse_list){
print(round(i,3))
}
for (i in cross_rmse_list){
print(round(i,digits=3))
}
round(cross_rmse,3)
View(all_df)
cross_train_first <- 1
cross_train_last <- 730
cross_test_first <- 731
cross_test_last <- cross_test_first + 30
loop_num <- ceiling((nrow(all_df) - cross_train_last) / 30)
split_train <- list()
split_test <- list()
cross_result <- list()
cross_rmse_list <- list()
for (i in 1:loop_num) {
d_train <- all_df[cross_train_first:cross_train_last,]
if (i == loop_num){
d_test <- all_df[cross_test_first:nrow(all_df),]
}else{
d_test <- all_df[cross_test_first:cross_test_last,]
}
date_list <- d_test$date
d_train <- d_train[,FV]
d_test <-d_test[,FV]
cross_pred <- cross_learn(d_train, d_test,"yes")
save_file_name <- paste0("/Users/e185716/グラフ練習2/クロス/ei_error_min/period_",i,".csv")
save_data <- data.frame(date_list, cross_pred$mean)
colnames(save_data) <- c("date", "prediction")
write.csv(x =save_data, file = save_file_name)
cross_result <- c(cross_result,list(cross_pred$mean))
cross_rmse <- calculate_rmse(d_test$CustNum, cross_pred$mean)
cross_r2 <- calculate_r_squared(d_test$CustNum, cross_pred$mean)
print(paste0("period_", i, ", RMSE : ", round(cross_rmse,3), " , R2 : ", round(cross_r2,3)))
cross_rmse_list <- c(cross_rmse_list,(paste0("period_", i, ", RMSE : ", round(cross_rmse,3), " , R2 : ", round(cross_r2,3))))
#分割データの保存
split_train <- c(split_train, list(d_train))
split_test <- c(split_test, list(d_test))
cross_train_first <- cross_train_first + 30
cross_train_last <- cross_train_last + 30
cross_test_first <- cross_test_first + 30
cross_test_last <- cross_test_last + 30
}
for (i in cross_rmse_list){
print(round(i,digits=3))
}
for (i in cross_rmse_list){
print(i)
}
############################################################
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
# 上で取得したイベントインパクト適応
event_name
d_train$event_impact <- 0
d_test$event_impact <- 0
# イベント１つずつ値を更新
for (i in seq_along(event_name)){
idx_test <- which(d_test[,event_name[i]] == 1)
idx_train <- which(d_train[,event_name[i]] == 1)
if(length(idx_test) == 0){
d_train[idx_train,]$event_impact <- use_event[i]
}else if (length(idx_train) == 0){
d_test[idx_test,]$event_impact <- use_event[i]
}else{
d_test[idx_test,]$event_impact <- use_event[i]
d_train[idx_train,]$event_impact <- use_event[i]
}
}
View(d_test)
View(d_train)
write.csv(x =d_train, file = "/Users/e185716/グラフ練習2/クロス/ei_error_min_train.csv")
write.csv(x =d_test, file = "/Users/e185716/グラフ練習2/クロス/ei_error_min_test.csv")
############################################################
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
train_test_list <-  ei_step(d_train, d_test, 100)
# 更新したイベントインパクトを結合
update_train <- list(ei_train_list[,100])
update_test <- list(ei_test_list[,100])
View(updated_ei)
View(update_train)
ei_step <- function(train, test, step){
train$event_impact <- ei_train_list[,step]
test$event_impact <- ei_test_list[,step]
return(list(train, test))
}
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
train_test_list <- ei_step(d_train,d_test,10)
d_train <- train_test_list[[1]]
d_test <- train_test_list[[2]]
View(d_train)
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
train_test_list <- ei_step(d_train,d_test,100)
d_train <- train_test_list[[1]]
d_test <- train_test_list[[2]]
View(d_train)
View(d_test)
write.csv(x =d_train, file = "/Users/e185716/グラフ練習2/クロス/ei_100_train.csv")
write.csv(x =d_test, file = "/Users/e185716/グラフ練習2/クロス/ei_100_test.csv")
non_ei_pred2 <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_non/pred.csv')
first_ei_pred2 <-read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_1/pred.csv')
hundred_ei_pred <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_100/pred.csv')
ei_error_min <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_error_min/pred.csv')
for (event_kind in event_name) {
idx <- which(event_test[,event_kind] == 1)
if (length(idx) > 0) {
print(event_kind)
print(length(idx))
print("RMSE")
print(paste("EIなし：",round(calculate_rmse(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
print(paste("初期値：",round(calculate_rmse(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
print(paste("100周：",round(calculate_rmse(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
print(paste("各最小値：",round(calculate_rmse(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_rmse(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_rmse(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
# print("決定係数")
# print(paste("EIなし：",round(calculate_r_squared(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
# print(paste("初期値：",round(calculate_r_squared(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
# print(paste("100周：",round(calculate_r_squared(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
# print(paste("各最小値：",round(calculate_r_squared(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_r_squared(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_r_squared(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
print("-------------------------------------")
}
}
non_ei_pred2[idx[0:10],]$prediction
first_ei_pred2[idx[0:10],]$prediction
hundred_ei_pred[idx[0:10],]$prediction
ei_error_min[idx[0:10],]$prediction
d_test[idx[0:10],]$date
idx <- which(event_test[,"祝日"] == 1)
non_ei_pred2[idx[0:10],]$prediction
first_ei_pred2[idx[0:10],]$prediction
hundred_ei_pred[idx[0:10],]$prediction
ei_error_min[idx[0:10],]$prediction
d_test[idx[0:10],]$date
non_ei_pred2 <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_non/pred.csv')
first_ei_pred2 <-read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_1/pred.csv')
hundred_ei_pred <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_100/pred.csv')
ei_error_min <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_error_min/pred.csv')
for (event_kind in event_name) {
idx <- which(event_test[,event_kind] == 1)
if (length(idx) > 0) {
print(event_kind)
print(length(idx))
print("RMSE")
print(paste("EIなし：",round(calculate_rmse(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
print(paste("初期値：",round(calculate_rmse(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
print(paste("100周：",round(calculate_rmse(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
print(paste("各最小値：",round(calculate_rmse(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_rmse(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_rmse(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
# print("決定係数")
# print(paste("EIなし：",round(calculate_r_squared(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
# print(paste("初期値：",round(calculate_r_squared(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
# print(paste("100周：",round(calculate_r_squared(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
# print(paste("各最小値：",round(calculate_r_squared(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_r_squared(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_r_squared(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
print("-------------------------------------")
}
}
idx <- which(event_test[,"祝日"] == 1)
non_ei_pred2[idx[0:10],]$prediction
first_ei_pred2[idx[0:10],]$prediction
hundred_ei_pred[idx[0:10],]$prediction
ei_error_min[idx[0:10],]$prediction
d_test[idx[0:10],]$date
d_test[idx[0:10],]$prediction
d_test[idx[0:10],]$CustNum
non_ei_pred2 <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_non/pred.csv')
first_ei_pred2 <-read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_1/pred.csv')
hundred_ei_pred <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_100/pred.csv')
ei_error_min <- read.csv('/Users/e185716/グラフ練習2/特徴ベクトル/FV3/ei_error_min/pred.csv')
for (event_kind in event_name) {
idx <- which(event_test[,event_kind] == 1)
if (length(idx) > 0) {
print(event_kind)
print(length(idx))
print("RMSE")
print(paste("EIなし：",round(calculate_rmse(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
print(paste("初期値：",round(calculate_rmse(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
print(paste("100周：",round(calculate_rmse(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
print(paste("各最小値：",round(calculate_rmse(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_rmse(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_rmse(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
# print("決定係数")
# print(paste("EIなし：",round(calculate_r_squared(d_test$CustNum[idx], non_ei_pred2$prediction[idx]),3)))
# print(paste("初期値：",round(calculate_r_squared(d_test$CustNum[idx], first_ei_pred2$prediction[idx]),3)))
# print(paste("100周：",round(calculate_r_squared(d_test$CustNum[idx], hundred_ei_pred$prediction[idx]),3)))
# print(paste("各最小値：",round(calculate_r_squared(d_test$CustNum[idx], ei_error_min$prediction[idx]),3)))
# print(paste("5周：",round(calculate_r_squared(d_test$CustNum[idx], fifth_ei_pred$mean[idx]),3)))
# print(paste("10周：",round(calculate_r_squared(d_test$CustNum[idx], tenth_ei_pred$mean[idx]),3)))
print("-------------------------------------")
}
}
idx <- which(event_test[,"祝日"] == 1)
non_ei_pred2[idx[0:10],]$prediction
first_ei_pred2[idx[0:10],]$prediction
hundred_ei_pred[idx[0:10],]$prediction
ei_error_min[idx[0:10],]$prediction
d_test[idx[0:10],]$CustNum
View(all_df)
# n期先予測
library(dplyr)
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
nrow(d_train)
nrow(d_test)
ei_step <- function(train, test, step){
train$event_impact <- ei_train_list[,step]
test$event_impact <- ei_test_list[,step]
return(list(train, test))
}
shift_learn <- function(train_data, test_data, csv_name, ei){
d_train <- train_data
d_test <- test_data
if (ei == "no"){
# イベントインパクト消す
d_train <- subset(d_train, select = setdiff(colnames(d_train), "event_impact"))
d_test <- subset(d_test, select = setdiff(colnames(d_test), "event_impact"))
}
for (i in event_name){
d_train <- subset(d_train, select = setdiff(colnames(d_train), i))
d_test <- subset(d_test, select = setdiff(colnames(d_test), i))
}
d_train[!complete.cases(d_train),]
#d_train <- d_train[-1,]
d_train[is.na(d_train)] <- 0
print(d_train[!complete.cases(d_train),])
d_test[is.na(d_test)] <- 0
d_test[!complete.cases(d_test),]
# 季節,トレンド,回帰成分.
library(bsts)
ss <- AddSeasonal(list(), d_train$CustNum, nseasons = 7)
model <- bsts(CustNum~., state.specification = ss, niter=1000, data=d_train)
# 予測
pred <- predict(model, burn=100, newdata=d_test)
# file_name <- paste0("/Users/e185716/グラフ練習/", csv_name, ".csv")
#
# write.csv(x = pred$mean, file = file_name)
#
# save_data <- data.frame(d_test$date, pred$mean)
# colnames(save_data) <- c("date", "prediction")
# write.csv(x = save_data, file = file_name)
return(pred)
}
shift_train <-  read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
shift_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
original_shift_train <- shift_train[,c("CustNum", "event_impact")]
original_shift_test <- shift_test[,c("CustNum", "event_impact")]
# 7日前までの客数を変数に追加
for (i in 1:7) {
# non_ei_pred <- non_ei_inspection(d_train, d_test, "non_ei_pred")
new_column_name <- paste0(i, "_ago_cust")  # 新しい列名
original_shift_test[new_column_name] <- lag(original_shift_test$CustNum, n=i, default = NA) # テストデータシフト
original_shift_test[new_column_name][1:i,] <- tail(d_train$CustNum, i) # テストデータの最初に学習データに含まれていた値を代入
original_shift_train[new_column_name] <- lag(original_shift_train$CustNum, n=i, default = NA) # 学習データシフト
}
View(original_shift_train)
col_names <- colnames(original_shift_train)
# イベントインパクトなし
shift_train <- original_shift_train
shift_test <- original_shift_test
View(original_shift_train)
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
date_list <- d_test$date
date_list
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
date_list <- d_test$date
nrow(d_train)
nrow(d_test)
ei_step <- function(train, test, step){
train$event_impact <- ei_train_list[,step]
test$event_impact <- ei_test_list[,step]
return(list(train, test))
}
shift_learn <- function(train_data, test_data, csv_name, ei){
d_train <- train_data
d_test <- test_data
if (ei == "no"){
# イベントインパクト消す
d_train <- subset(d_train, select = setdiff(colnames(d_train), "event_impact"))
d_test <- subset(d_test, select = setdiff(colnames(d_test), "event_impact"))
}
for (i in event_name){
d_train <- subset(d_train, select = setdiff(colnames(d_train), i))
d_test <- subset(d_test, select = setdiff(colnames(d_test), i))
}
d_train[!complete.cases(d_train),]
#d_train <- d_train[-1,]
d_train[is.na(d_train)] <- 0
print(d_train[!complete.cases(d_train),])
d_test[is.na(d_test)] <- 0
d_test[!complete.cases(d_test),]
# 季節,トレンド,回帰成分.
library(bsts)
ss <- AddSeasonal(list(), d_train$CustNum, nseasons = 7)
model <- bsts(CustNum~., state.specification = ss, niter=1000, data=d_train)
# 予測
pred <- predict(model, burn=100, newdata=d_test)
file_name <- paste0("/Users/e185716/グラフ練習2/", csv_name, ".csv")
# write.csv(x = pred$mean, file = file_name)
save_data <- data.frame(date_list, pred$mean)
colnames(save_data) <- c("date", "prediction")
write.csv(x = save_data, file = file_name)
return(pred)
}
shift_train <-  read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
shift_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
original_shift_train <- shift_train[,c("CustNum", "event_impact")]
original_shift_test <- shift_test[,c("CustNum", "event_impact")]
# 7日前までの客数を変数に追加
for (i in 1:7) {
# non_ei_pred <- non_ei_inspection(d_train, d_test, "non_ei_pred")
new_column_name <- paste0(i, "_ago_cust")  # 新しい列名
original_shift_test[new_column_name] <- lag(original_shift_test$CustNum, n=i, default = NA) # テストデータシフト
original_shift_test[new_column_name][1:i,] <- tail(d_train$CustNum, i) # テストデータの最初に学習データに含まれていた値を代入
original_shift_train[new_column_name] <- lag(original_shift_train$CustNum, n=i, default = NA) # 学習データシフト
}
# イベントインパクトなし
shift_train <- original_shift_train
shift_test <- original_shift_test
for (i in 1:7){
save_file_name <- paste0( "n期先/non_ei/pred_ahead_", i)
shift_nonei_pred <- shift_learn(shift_train, shift_test, save_file_name, "no")
# 予測値をテストデータに挿入
shift_test <- cbind(shift_test[, 1:2], shift_nonei_pred$mean, shift_test[, 3:ncol(shift_test)])
del_col_num <-  3+i
shift_test <- shift_test[, -del_col_num]
colnames(shift_test) <- col_names
}
# イベントインパクトt=0
shift_train <- original_shift_train
shift_test <- original_shift_test
for (i in 1:7){
save_file_name <- paste0( "7期先/first_ei/pred_ahead_", i)
shift_nonei_pred <- shift_learn(shift_train, shift_test, save_file_name, "yes")
# 予測値をテストデータに挿入
shift_test <- cbind(shift_test[, 1:2], shift_nonei_pred$mean, shift_test[, 3:ncol(shift_test)])
del_col_num <-  3+i
shift_test <- shift_test[, -del_col_num]
colnames(shift_test) <- col_names
}
# イベントインパクトt=5
shift_train <- original_shift_train
shift_test <- original_shift_test
train_test_list <- ei_step(shift_train,shift_test,100)
shift_train <- train_test_list[[1]]
shift_test <- train_test_list[[2]]
View(shift_test)
for (i in 1:7){
save_file_name <- paste0( "7期先/100_ei/pred_ahead_", i)
shift_nonei_pred <- shift_learn(shift_train, shift_test, save_file_name, "yes")
# 予測値をテストデータに挿入
shift_test <- cbind(shift_test[, 1:2], shift_nonei_pred$mean, shift_test[, 3:ncol(shift_test)])
del_col_num <-  3+i
shift_test <- shift_test[, -del_col_num]
colnames(shift_test) <- col_names
}
############################################################
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
# 上で取得したイベントインパクト適応
event_name
d_train$event_impact <- 0
d_test$event_impact <- 0
# イベント１つずつ値を更新
for (i in seq_along(event_name)){
idx_test <- which(d_test[,event_name[i]] == 1)
idx_train <- which(d_train[,event_name[i]] == 1)
if(length(idx_test) == 0){
d_train[idx_train,]$event_impact <- use_event[i]
}else if (length(idx_train) == 0){
d_test[idx_test,]$event_impact <- use_event[i]
}else{
d_test[idx_test,]$event_impact <- use_event[i]
d_train[idx_train,]$event_impact <- use_event[i]
}
}
############################################################
d_train <- read.csv('/Users/e185716/研究/R/ei_make/event_train.csv')
d_test <- read.csv('/Users/e185716/研究/R/ei_make/event_test.csv')
# 上で取得したイベントインパクト適応
event_name
d_train$event_impact <- 0
d_test$event_impact <- 0
# イベント１つずつ値を更新
for (i in seq_along(event_name)){
idx_test <- which(d_test[,event_name[i]] == 1)
idx_train <- which(d_train[,event_name[i]] == 1)
if(length(idx_test) == 0){
d_train[idx_train,]$event_impact <- use_event[i]
}else if (length(idx_train) == 0){
d_test[idx_test,]$event_impact <- use_event[i]
}else{
d_test[idx_test,]$event_impact <- use_event[i]
d_train[idx_train,]$event_impact <- use_event[i]
}
}
View(d_test)
########################################################
# 7日先予測
original_shift_train <- d_train
original_shift_test <- d_test
View(original_shift_train)
original_shift_train <- shift_train[,c("CustNum", "event_impact")]
original_shift_test <- shift_test[,c("CustNum", "event_impact")]
View(original_shift_test)
# 7日前までの客数を変数に追加
for (i in 1:7) {
# non_ei_pred <- non_ei_inspection(d_train, d_test, "non_ei_pred")
new_column_name <- paste0(i, "_ago_cust")  # 新しい列名
original_shift_test[new_column_name] <- lag(original_shift_test$CustNum, n=i, default = NA) # テストデータシフト
original_shift_test[new_column_name][1:i,] <- tail(d_train$CustNum, i) # テストデータの最初に学習データに含まれていた値を代入
original_shift_train[new_column_name] <- lag(original_shift_train$CustNum, n=i, default = NA) # 学習データシフト
}
View(original_shift_train)
View(original_shift_train)
View(original_shift_test)
View(d_test)
########################################################
# 7日先予測
original_shift_train <- d_train
original_shift_test <- d_test
original_shift_train <- original_shift_train[,c("CustNum", "event_impact")]
original_shift_test <- original_shift_test[,c("CustNum", "event_impact")]
# 7日前までの客数を変数に追加
for (i in 1:7) {
# non_ei_pred <- non_ei_inspection(d_train, d_test, "non_ei_pred")
new_column_name <- paste0(i, "_ago_cust")  # 新しい列名
original_shift_test[new_column_name] <- lag(original_shift_test$CustNum, n=i, default = NA) # テストデータシフト
original_shift_test[new_column_name][1:i,] <- tail(d_train$CustNum, i) # テストデータの最初に学習データに含まれていた値を代入
original_shift_train[new_column_name] <- lag(original_shift_train$CustNum, n=i, default = NA) # 学習データシフト
}
shift_train <- original_shift_train
shift_test <- original_shift_test
for (i in 1:7){
save_file_name <- paste0( "7期先/adapted_ei/pred_ahead_", i)
shift_nonei_pred <- shift_learn(shift_train, shift_test, save_file_name, "yes")
# 予測値をテストデータに挿入
shift_test <- cbind(shift_test[, 1:2], shift_nonei_pred$mean, shift_test[, 3:ncol(shift_test)])
del_col_num <-  3+i
shift_test <- shift_test[, -del_col_num]
colnames(shift_test) <- col_names
}
